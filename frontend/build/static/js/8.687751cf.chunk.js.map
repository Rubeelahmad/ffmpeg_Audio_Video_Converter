{"version":3,"sources":["views/video-converter/converter-page/api.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","../node_modules/react-bootstrap/esm/Row.js","views/video-compressor/converter-page/target-a-file-size-components/file-size-in-mb.js","../node_modules/react-bootstrap/esm/InputGroup.js","views/video-compressor/converter-page/target-a-file-size-components/file-size-in-percentage.js","views/video-compressor/converter-page/api.js","views/video-compressor/converter-page/video-compressor-dropzone-area.js","views/video-compressor/converter-page/index.js","views/components/converter-file.js","utiles/constants.js","utiles/API.js","views/components/alert.js","views/components/loder.js","utiles/file-upload-api.js"],"names":["BASE_API_URL","ENVIRONMENT_VARIABLES","converterApi","body","type","converter","a","config","headers","response","toLowerCase","_","find","Videos","video","name","API","post","obj","code","message","items","data","Audios","audio","fileDownload","file_name","fetch","then","blob","myBlob","URL","createObjectURL","Blob","link","document","createElement","href","window","download","click","propTypes","PropTypes","string","tooltip","bool","as","elementType","Feedback","React","ref","Component","className","props","_jsx","classNames","displayName","FormContext","FormCheckInput","id","bsPrefix","isValid","isInvalid","controlId","useContext","useBootstrapPrefix","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","style","title","label","children","innerFormContext","useMemo","hasLabel","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","Label","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","FormGroup","context","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","defaultProps","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","Row","decoratedBsPrefix","sizePrefix","cols","FileSizeInMB","handleTargetSizeInMB","sizeInMB","xs","onChange","InputGroupText","InputGroup","hasValidation","contextValue","InputGroupContext","Radio","Checkbox","FileSizeInPercentage","handleTargetSizeInPercentage","sizeInPercentage","min","max","placeholder","compressorApi","console","log","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","backgroundImage","backgroundSize","backgroundPosition","color","outline","transition","activeStyle","acceptStyle","rejectStyle","styleFile","btnColor","videoCodecValues","compressionMethodValues","VideoCompressorForm","useState","imageData","setImageData","isLoaded","setIsLoaded","isFileUploadOrConvert","setIsFileUploadOrConvert","videoCodec","setVideoCodec","compressionMethod","setCompressionMethod","compressionMethodIndex","setCompressionMethodIndex","setSizeInMB","setSizeInPercentage","uploadBtn","setUploadBtn","convertBtn","setConvertBtn","downloadBtn","setDownloadBtn","downloadLink","setDownloadLink","fileNameAny","setFileNameAny","fileNameWithId","setFileNameWithId","useDropzone","getRootProps","getInputProps","open","isDragActive","isDragAccept","isDragReject","handleRemoveFile","removeFile","fileHandleChange","e","removeFileRes","file","target","files","handleUpload","fileUploadApi","fileUploadRes","successMessageAlert","errorMessageAlert","error","handleConvert","convertFileResponse","handleDownload","downloadedFile","onClick","fontSize","cursor","icon","faTimes","textAlign","Card","Header","Body","Title","borderBottom","map","index","selectedIndex","VideoComressorUI","path","VideoCompressorType","Mp4ToMp3","axios","create","baseURL","responseType","Swal","fire","text","Loader","marginTop","height","loading","formData","FormData","append","fileRemoveApi","fileName","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed"],"mappings":"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","file":"static/js/8.687751cf.chunk.js","sourcesContent":["import API from '../../../utiles/API';\r\nimport _ from 'lodash';\r\nimport { ENVIRONMENT_VARIABLES } from '../../../utiles/constants';\r\nimport { Audios, Videos } from '../../components/converter-file';\r\nconst BASE_API_URL = ENVIRONMENT_VARIABLES.BASE_API_URL;\r\n\r\n\r\nexport async function converterApi(body, type, converter) {\r\n    let config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    try {\r\n        let response = {};\r\n\r\n        if (converter.toLowerCase() == \"video\") {\r\n            const is_video_converter = _.find(Videos, function (video) { return video?.name.toLowerCase() === type.toLowerCase(); });\r\n            if (is_video_converter) {\r\n                response = await API.post(`${BASE_API_URL}/file-info/video-converter?to=${type}`, body, config);\r\n            } else {\r\n                const obj = {\r\n                    code: 400,\r\n                    message: `${type} is not supported`,\r\n                    items: [],\r\n                }\r\n                response.data = obj;\r\n            }\r\n        } else if (converter.toLowerCase() == \"audio\") {\r\n            const is_audio_converter = _.find(Audios, function (audio) { return audio?.name.toLowerCase() === type.toLowerCase(); });\r\n\r\n            if (is_audio_converter) {\r\n                response = await API.post(`${BASE_API_URL}/file-info/audio-converter?to=${type}`, body, config);\r\n            } else {\r\n                const obj = {\r\n                    code: 400,\r\n                    message: `${type} is not supported`,\r\n                    items: [],\r\n                }\r\n                response.data = obj;\r\n            }\r\n        } else if (converter.toLowerCase() == \"mp4-to-mp3\") {\r\n            response = await API.post(`${BASE_API_URL}/file-info/audio-converter`, body, config);\r\n        }\r\n\r\n        return response?.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function fileDownload(file_name) {\r\n    let config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    try {\r\n        fetch(`${BASE_API_URL}file-info/download?file_name=${file_name}`)\r\n            .then(response => response.blob())\r\n            .then(function (myBlob) {\r\n                var objectURL = URL.createObjectURL(myBlob);\r\n                const blob = new Blob([myBlob]);\r\n                const link = document.createElement('a');\r\n                link.href = window.URL.createObjectURL(blob);\r\n                link.download = `${file_name}`;\r\n                link.click();\r\n\r\n            })\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import React from \"react\";\r\nimport { Col, Form, Row } from \"react-bootstrap\";\r\n\r\nconst FileSizeInMB = ({ handleTargetSizeInMB, sizeInMB }) => {\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                <Col xs={4} className=\"text-end\">\r\n                    <Form.Label>Target Size (MB)</Form.Label>\r\n                </Col>\r\n                <Col xs={8}>\r\n                    <Form.Control type=\"number\" size=\"sm\" value={sizeInMB} onChange={handleTargetSizeInMB} />\r\n                    <Form.Text className=\"text-muted\">\r\n                        Enter desired video file size in MB (Megabytes)\r\n                    </Form.Text>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileSizeInMB;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\n\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group'); // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","import React from \"react\";\r\nimport { Col, Form, FormControl, InputGroup, Row } from \"react-bootstrap\";\r\n\r\nconst FileSizeInPercentage = ({ handleTargetSizeInPercentage, sizeInPercentage }) => {\r\n    return (\r\n        <>\r\n            <Row className=\"mt-3\">\r\n                <Col xs={4} className=\"text-end\">\r\n                    <Form.Label>Select Target Size (%)</Form.Label>\r\n                </Col>\r\n                <Col xs={8}>\r\n                    <Row>\r\n                        <Col xs={6}>\r\n                            <Form.Range type=\"text\" size=\"sm\" min=\"1\" max=\"100\" value={sizeInPercentage} onChange={handleTargetSizeInPercentage} />\r\n                        </Col>\r\n                        <Col xs={6}>\r\n                            <Form.Label htmlFor=\"inlineFormInputGroup\" visuallyHidden>\r\n\r\n                            </Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <Form.Control type=\"number\" min=\"1\" max=\"100\" id=\"inlineFormInputGroup\" placeholder=\"File size percentage value\" value={sizeInPercentage} onChange={handleTargetSizeInPercentage} />\r\n                                <InputGroup.Text>%</InputGroup.Text>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Form.Text className=\"text-muted\">\r\n                            Select a target file size as a percentage of the original. Smaller values compress more. For example, a 100Mb file would become 25Mb if you select 25%.\r\n                        </Form.Text>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FileSizeInPercentage;","import API from '../../../utiles/API';\r\nimport _ from 'lodash';\r\nimport { ENVIRONMENT_VARIABLES } from '../../../utiles/constants';\r\nimport { Audios, Videos } from '../../components/converter-file';\r\nconst BASE_API_URL = ENVIRONMENT_VARIABLES.BASE_API_URL;\r\n\r\n\r\nexport async function compressorApi(body) {\r\n    let config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    try {\r\n        let response = {};\r\n\r\n        response = await API.post(`${BASE_API_URL}/file-info/video-compress`, body, config);\r\n        console.log(\"Data::::::::::::::: resposne::::::::::: \", response.data)\r\n\r\n        return response?.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React, { useMemo, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport Loader from '../../components/loder';\r\nimport { errorMessageAlert, successMessageAlert } from '../../components//alert';\r\nimport { Card, Col, Form, Row } from 'react-bootstrap';\r\nimport FileSizeInMB from './target-a-file-size-components/file-size-in-mb';\r\nimport FileSizeInPercentage from './target-a-file-size-components/file-size-in-percentage';\r\nimport { compressorApi } from './api';\r\nimport { fileUploadApi, removeFile } from '../../../utiles/file-upload-api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { fileDownload } from '../../video-converter/converter-page/api';\r\n\r\nconst baseStyle = {\r\n    flex: 1,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '80px',\r\n    borderWidth: 2,\r\n    borderRadius: 2,\r\n    borderColor: '#eeeeee',\r\n    borderStyle: 'dashed',\r\n    backgroundColor: '#3c3c3c',\r\n    backgroundImage: 'linear-gradient(45deg, rgba(0, 0, 0, .06) 25%, transparent 0), linear-gradient(-45deg, rgba(0, 0, 0, .06) 25%, transparent 0), linear-gradient(45deg, transparent 75%, rgba(0, 0, 0, .06) 0), linear-gradient(-45deg, transparent 75%, rgba(0, 0, 0, .06) 0)',\r\n    backgroundSize: '24px 24px',\r\n    backgroundPosition: '0 0, 0 12px, 12px -12px, -12px 0',\r\n    color: '#bdbdbd',\r\n    outline: 'none',\r\n    transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n    borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n    borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n    borderColor: '#ff1744'\r\n};\r\n\r\nconst styleFile = {\r\n    btnColor: {\r\n        backgroundColor: '#f33',\r\n        color: 'white'\r\n    }\r\n}\r\n\r\nconst videoCodecValues = [\"264\", \"265\"];\r\n// const compressionMethodValues = [\"Target a video resolution\", \"Target a file size (MB)\", \"Target a file size (Percentage)\", \"Target a video quilty\", \"Target a max bitrate\"];\r\nconst compressionMethodValues = [\"Target a file size (MB)\", \"Target a file size (Percentage)\"];\r\n\r\nfunction VideoCompressorForm(props) {\r\n    const [imageData, setImageData] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isFileUploadOrConvert, setIsFileUploadOrConvert] = useState(null);\r\n    const [videoCodec, setVideoCodec] = useState(videoCodecValues[0]);\r\n    const [compressionMethod, setCompressionMethod] = useState(compressionMethodValues[0]);\r\n    const [compressionMethodIndex, setCompressionMethodIndex] = useState(0);\r\n    const [sizeInMB, setSizeInMB] = useState(1);\r\n    const [sizeInPercentage, setSizeInPercentage] = useState(60);\r\n    const [uploadBtn, setUploadBtn] = useState(false);\r\n    const [convertBtn, setConvertBtn] = useState(false);\r\n    const [downloadBtn, setDownloadBtn] = useState(false);\r\n    const [downloadLink, setDownloadLink] = useState(null);\r\n    const [fileNameAny, setFileNameAny] = useState(null);\r\n    const [fileNameWithId, setFileNameWithId] = useState({});\r\n\r\n    const {\r\n        getRootProps,\r\n        getInputProps,\r\n        open,\r\n        isDragActive,\r\n        isDragAccept,\r\n        isDragReject\r\n    } = useDropzone({\r\n        // accept: 'image/*',\r\n    });\r\n\r\n    const style = useMemo(() => ({\r\n        ...baseStyle,\r\n        ...(isDragActive ? activeStyle : {}),\r\n        ...(isDragAccept ? acceptStyle : {}),\r\n        ...(isDragReject ? rejectStyle : {})\r\n    }), [\r\n        isDragActive,\r\n        isDragReject,\r\n        isDragAccept\r\n    ]);\r\n\r\n    const handleRemoveFile = async () => {\r\n        if (convertBtn == true || downloadBtn == true) {\r\n            const removeFileRes = await removeFile(fileNameAny);\r\n            if (removeFileRes == true) {\r\n                setFileNameAny(null);\r\n                setImageData(null);\r\n                setDownloadLink(null);\r\n                setDownloadBtn(false);\r\n                setConvertBtn(false);\r\n                setUploadBtn(false);\r\n            }\r\n        } else if (uploadBtn == true) {\r\n            setFileNameAny(null);\r\n            setImageData(null);\r\n            setDownloadLink(null);\r\n            setDownloadBtn(false);\r\n            setConvertBtn(false);\r\n            setUploadBtn(false);\r\n        }\r\n        // const removeFileRes = await removeFile(fileNameAny);\r\n\r\n\r\n    }\r\n\r\n    const fileHandleChange = async (e) => {\r\n        let removeFileRes = true;\r\n        if (downloadBtn == true || convertBtn == true) {\r\n            /* Remove file from cloud which is uploaded */\r\n            // removeFileRes = false;\r\n            removeFileRes = await removeFile(fileNameAny);\r\n        }\r\n\r\n        if (removeFileRes) {\r\n            setDownloadBtn(false);\r\n            setConvertBtn(false);\r\n            setUploadBtn(true);\r\n            const file = e.target.files[0];\r\n            setFileNameAny(file?.name);\r\n            setDownloadLink(null);\r\n            setImageData(file);\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpload = async () => {\r\n        setIsFileUploadOrConvert(\"File Uploading...\");\r\n        setIsLoaded(true);\r\n        const body = {\r\n            file: imageData\r\n        };\r\n        try {\r\n            const fileUploadRes = await fileUploadApi(body);\r\n            if (fileUploadRes?.code == 200) {\r\n                setUploadBtn(false);\r\n                setConvertBtn(true);\r\n                setDownloadBtn(false);\r\n                setFileNameAny(fileUploadRes?.items?.name);\r\n                setFileNameWithId(fileUploadRes?.items);\r\n                // setFileName(`${file?.name} is ready for convert...`);\r\n                successMessageAlert(`${fileUploadRes?.items?.name} uploaded successfully!`)\r\n\r\n            } else {\r\n                errorMessageAlert(\"File dose not uploaded due to internal error!\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error(\"Error::::::::: handle convert function\", error);\r\n            errorMessageAlert();\r\n        } finally {\r\n            setIsLoaded(false);\r\n            setIsFileUploadOrConvert(null);\r\n        }\r\n    }\r\n\r\n    const handleConvert = async () => {\r\n        setIsFileUploadOrConvert(\"File Compressing...\");\r\n        setIsLoaded(true);\r\n\r\n        try {\r\n            const body = {\r\n                id: fileNameWithId?.id,\r\n                name: fileNameWithId?.name,\r\n                videoCodec: videoCodec,\r\n                compressionMethod: compressionMethod,\r\n                sizeInMB: sizeInMB,\r\n                sizeInPercentage: sizeInPercentage\r\n            };\r\n            const convertFileResponse = await compressorApi(body);\r\n            if (convertFileResponse?.code >= 200 || convertFileResponse?.code < 205) {\r\n                setImageData(null);\r\n                setDownloadBtn(true);\r\n                setUploadBtn(false);\r\n                setConvertBtn(false);\r\n                setFileNameAny(convertFileResponse?.items?.name);\r\n                setDownloadLink(convertFileResponse?.items?.name);\r\n\r\n                successMessageAlert(convertFileResponse.message) //Show alert after convert\r\n            } else {\r\n                errorMessageAlert();\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error::::::::: handle convert function\", error);\r\n            errorMessageAlert();\r\n        } finally {\r\n            setIsLoaded(false);\r\n            setIsFileUploadOrConvert(null);\r\n        }\r\n\r\n    }\r\n\r\n    const handleDownload = async () => {\r\n        try {\r\n            const downloadedFile = await fileDownload(downloadLink);\r\n            console.log(\"File:::::::::\", downloadedFile)\r\n        } catch (error) {\r\n            console.error(\"Error::::::::: handle convert function\", error);\r\n            errorMessageAlert();\r\n        } finally {\r\n        }\r\n    }\r\n\r\n    const handleCompressionMethod = (e) => {\r\n        console.log(\"Compression Method\", compressionMethodValues[e.target.value]);\r\n        const selectedIndex = e.target.value;\r\n        setCompressionMethodIndex(selectedIndex);\r\n        setCompressionMethod(compressionMethodValues[selectedIndex]);\r\n    }\r\n\r\n    const handleTargetSizeInMB = (e) => {\r\n        const value = e.target.value;\r\n        if (sizeInMB < 1) {\r\n            setSizeInMB(1);\r\n        } else {\r\n            setSizeInMB(value);\r\n        }\r\n    }\r\n\r\n    const handleTargetSizeInPercentage = (e) => {\r\n        const value = e.target.value;\r\n        if (sizeInPercentage < 1) {\r\n            setSizeInPercentage(1);\r\n        } else if (value > 100) {\r\n            setSizeInPercentage(100);\r\n        } else {\r\n            setSizeInPercentage(value)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"\">\r\n                    {\r\n                        uploadBtn || convertBtn || downloadBtn ? (\r\n                            <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th>{fileNameAny}</th>\r\n                                        <th>\r\n                                            {\r\n                                                uploadBtn ? (\r\n                                                    <button type=\"button\" style={styleFile.btnColor} disabled={isLoaded} className=\"btn\" onClick={handleUpload}>\r\n                                                        Upload\r\n                                                    </button>\r\n                                                ) : convertBtn ? (\r\n                                                    <button type=\"button\" style={styleFile.btnColor} disabled={isLoaded} className=\"btn\" onClick={handleConvert}>\r\n                                                        Compress\r\n                                                    </button>\r\n                                                ) : downloadBtn ? (\r\n                                                    <button type=\"button\" disabled={isLoaded} style={styleFile.btnColor} className=\"btn\" onClick={handleDownload}>\r\n                                                        Download File\r\n                                                    </button>\r\n                                                ) : ''\r\n                                            }\r\n                                        </th>\r\n                                        <th><FontAwesomeIcon className=\"text-danger\" style={{ fontSize: '24px', cursor: 'pointer' }} title=\"Remove file\" icon={faTimes} onClick={handleRemoveFile} /></th>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        ) : ''\r\n                    }\r\n                </div>\r\n\r\n                {\r\n                    isLoaded ? (\r\n                        <>\r\n                            <div style={{ textAlign: \"center\" }}>\r\n                                <h5>{isFileUploadOrConvert}</h5>\r\n                            </div>\r\n                            <Loader isLoaded={isLoaded} />\r\n                        </>\r\n                    ) : (\r\n                        <div {...getRootProps({ style })} onChange={fileHandleChange}>\r\n                            <input {...getInputProps()} onChange={fileHandleChange} />\r\n                            <p>Drag 'n' drop some files here, or click to select files</p>\r\n\r\n                            <button type=\"button\" className=\"btn p-3 mt-3\" style={styleFile.btnColor} onClick={open}>\r\n                                Open File Dialog\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                <Card className=\"mt-3\" style={{ display: isLoaded ? \"none\" : \"block\", }}>\r\n                    <Card.Header className=\"display-6\">\r\n                        Advanced Setting\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"text-center mb-2 pb-3\" style={{ borderBottom: '1px solid gray', fontSize: '20px' }}>\r\n                            Video Quilty & Size\r\n                        </Card.Title>\r\n                        <Form>\r\n                            <Row className=\"mt-3\">\r\n                                <Col xs={4} className=\"text-end\">\r\n                                    <Form.Label>Video Codec</Form.Label>\r\n                                </Col>\r\n                                <Col xs={8}>\r\n                                    <Form.Select size=\"sm\" onChange={(e) => {\r\n                                        setVideoCodec(videoCodecValues[e.target.value]);\r\n                                    }}>\r\n                                        {\r\n                                            videoCodecValues.map((value, index) => {\r\n                                                return <option key={index} value={index}>\r\n                                                    H{value}\r\n                                                </option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        H265 codec can reduce video size 20-75% more compared to H264 (especially high-resolution video)\r\n                                    </Form.Text>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"mt-3\">\r\n                                <Col xs={4} className=\"text-end\">\r\n                                    <Form.Label>Compression Method</Form.Label>\r\n                                </Col>\r\n                                <Col xs={8}>\r\n                                    <Form.Select size=\"sm\" onChange={handleCompressionMethod}>\r\n                                        {\r\n                                            compressionMethodValues.map((value, index) => {\r\n                                                return <option key={index} value={index}>\r\n                                                    {value}\r\n                                                </option>\r\n                                            })\r\n                                        }\r\n                                    </Form.Select>\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        Choose \"Target a file size\" to get an exact output file size. Choose \"Target a video quality\" when quality is of importance.\r\n                                    </Form.Text>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/* <FileSizeInPercentage /> */}\r\n                            {\r\n                                compressionMethodIndex == 0 ? <FileSizeInMB sizeInMB={sizeInMB} handleTargetSizeInMB={handleTargetSizeInMB} /> : compressionMethodIndex == 1 ? <FileSizeInPercentage sizeInPercentage={sizeInPercentage} handleTargetSizeInPercentage={handleTargetSizeInPercentage} /> : \"\"\r\n                            }\r\n\r\n                            <Row className=\"mt-3\">\r\n                                <Col xs={4} className=\"text-end\">\r\n                                    <Form.Label>Make video compatible with old devices?</Form.Label>\r\n                                </Col>\r\n                                <Col xs={8}>\r\n                                    <Form.Check type=\"checkbox\" />\r\n                                    <Form.Check.Label className=\"text-muted\">Only use this option if you plan to play the video on a really old device or if you are having playback issues (it compress less)</Form.Check.Label>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoCompressorForm;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport VideoCompressorForm from './video-compressor-dropzone-area';\r\n\r\n\r\nfunction VideoComressorUI(props) {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"text-center mt-5\">\r\n                    <h1 style={{color: '#f33'}}><span className=\"text-uppercase\">Video</span> Compressor</h1>\r\n                    <h6 className=\"lead\">Compress your files for free</h6>\r\n                </div>\r\n                <div className=\"mt-4 mb-4\">\r\n                    <VideoCompressorForm />\r\n                </div>\r\n                <Card>\r\n                    <Card.Header>Ths is Card Header</Card.Header>\r\n                    <Card.Body>\r\n                        This is card body\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoComressorUI;\r\n","export const Videos = [\r\n    {\r\n        name: 'MP4',\r\n        path: 'mp4-converter',\r\n    },\r\n    {\r\n        name: 'WEBM',\r\n        path: 'webm-converter',\r\n    },\r\n    {\r\n        name: 'FLV',\r\n        path: 'flv-converter',\r\n    },\r\n    {\r\n        name: 'MKV',\r\n        path: 'mkv-converter',\r\n    },\r\n    {\r\n        name: 'AVI',\r\n        path: 'avi-converter',\r\n    },\r\n    {\r\n        name: 'MOV',\r\n        path: 'mov-converter',\r\n    },\r\n    {\r\n        name: '3GP',\r\n        path: '3gp-converter',\r\n    },\r\n    {\r\n        name: 'WMV',\r\n        path: 'wmv-converter',\r\n    },\r\n]\r\n\r\nexport const Audios = [\r\n    {\r\n        name: \"MP3\",\r\n        path: \"mp3-converter\"\r\n    },\r\n    {\r\n        name: \"WMA\",\r\n        path: \"wma-converter\"\r\n    },\r\n    {\r\n        name: \"MAV\",\r\n        path: \"MAV-converter\"\r\n    },\r\n    {\r\n        name: \"FLAC\",\r\n        path: \"flac-converter\"\r\n    },  \r\n    {\r\n        name: \"MA4\",\r\n        path: \"ma4-converter\"\r\n    },\r\n    {\r\n        name: \"ALAC\",\r\n        path: \"alac-converter\"\r\n    },\r\n    {\r\n        name: \"AMR\",\r\n        path: \"amr-converter\"\r\n    },\r\n    {\r\n        name: \"OGG\",\r\n        path: \"ogg-converter\"\r\n    },\r\n    {\r\n        name: \"AIFF\",\r\n        path: \"aiff-converter\"\r\n    },\r\n    {\r\n        name: \"AAC\",\r\n        path: \"aac-converter\"\r\n    },\r\n]\r\n\r\nexport const VideoCompressorType = [\r\n    {\r\n        name: \"Video Compressor\",\r\n        path: \"video-compressor\"\r\n    },\r\n]\r\n\r\nexport const Mp4ToMp3 = [\r\n    {\r\n        name: \"MP4 To MP3\",\r\n        path: \"mp4-to-mp3\",\r\n    },\r\n]\r\n","const ENVIRONMENT_VARIABLES = {\r\n    // BASE_API_URL: 'http://ec2-54-187-96-121.us-west-2.compute.amazonaws.com:3000/v1/',\r\n    // BASE_API_URL: 'http://localhost:3000/api/v1/',\r\n    BASE_API_URL: 'https://smallconverter.io/api/v1',\r\n    // BASE_API_URL: 'https://coverter-rubeel.herokuapp.com/api/v1/',\r\n  };\r\n  \r\n  export { ENVIRONMENT_VARIABLES };\r\n  ","import axios from 'axios';\r\nimport { ENVIRONMENT_VARIABLES } from './constants';\r\n\r\nexport default axios.create({\r\n  baseURL: ENVIRONMENT_VARIABLES.BASE_API_URL,\r\n  responseType: 'json',\r\n});\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const successMessageAlert = (message = \"Converted your media successfully!\") => {\r\n    Swal.fire(\"Success\", message, \"success\");\r\n};\r\n\r\nexport const errorMessageAlert = (message=\"Internal error\") => {\r\n    Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: message,\r\n        // footer: '<a href=\"\">Why do I have this issue?</a>',\r\n    });\r\n};\r\n\r\nexport const confrimAlert = (message) => {\r\n    Swal.fire({\r\n        title: 'Are you sure?',\r\n        text: \"You won't be able to revert this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          Swal.fire(\r\n            'Deleted!',\r\n            'Your file has been deleted.',\r\n            'success'\r\n          )\r\n        }\r\n      })\r\n}","import React from \"react\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n// import { css } from \"@emotion/core\";\r\n\r\n// CSS  properties of loader\r\n// const override = css`\r\n//   display: block;\r\n// `;\r\n\r\nfunction Loader(props) {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"sweet-loading\"\r\n        style={{ textAlign: \"center\", marginTop: \"5%\" }}\r\n      >\r\n        <ScaleLoader\r\n          // css={override}\r\n          color={\"blue\"}\r\n          height={100}\r\n          loading={props.isLoaded}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import Swal from 'sweetalert2';\r\nimport { errorMessageAlert } from '../views/components/alert';\r\nimport API from './API';\r\nimport { ENVIRONMENT_VARIABLES } from './constants';\r\nconst BASE_API_URL = ENVIRONMENT_VARIABLES.BASE_API_URL;\r\n\r\n\r\nexport async function fileUploadApi(body) {\r\n    let config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    try {\r\n        let response = {};\r\n        let formData = new FormData();\r\n        formData.append(\"file\", body.file);\r\n\r\n        response = await API.post(`${BASE_API_URL}/file-info/file-upload`, formData, config);\r\n\r\n        return response?.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport async function fileRemoveApi(body) {\r\n    let config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    };\r\n    try {\r\n        let response = {};\r\n\r\n        response = await API.post(`${BASE_API_URL}/file-info/remove-file`, body, config);\r\n\r\n        return response?.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport const removeFile = async (fileName) => {\r\n    const body = {\r\n        name: fileName,\r\n    }\r\n    try {\r\n        \r\n        const result = await Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: `You want to remove ${fileName}`,\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, remove it!'\r\n        });\r\n\r\n        if (result.isConfirmed) {\r\n            const removeFileRes = await fileRemoveApi(body)\r\n            Swal.fire(\r\n                'Removed!',\r\n                'Your file has been Removed.',\r\n                'success'\r\n            )\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n\r\n\r\n    } catch (error) {\r\n        console.error(\"Error::::::::: handle remove file function\", error);\r\n        errorMessageAlert();\r\n    }\r\n}"],"sourceRoot":""}